name: CI - Test, Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect project directory (requirements.txt)
        run: |
          REQ=$(git ls-files | grep -E '(^|/)requirements\.txt$' | head -n1)
          if [ -z "$REQ" ]; then echo "requirements.txt not found" && exit 1; fi
          DIR=$(dirname "$REQ")
          if [ -z "$DIR" ] || [ "$DIR" = "." ]; then DIR="."; fi
          echo "PROJECT_DIR=$DIR" >> $GITHUB_ENV
          echo "PY_PROJECT_PATH=$GITHUB_WORKSPACE/$DIR" >> $GITHUB_ENV

      - name: Normalize image name (lowercase)
        run: |
          echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}:latest" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r "$PROJECT_DIR/requirements.txt"

      - name: Run tests
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          PYTHONPATH: ${{ env.PY_PROJECT_PATH }}
        run: pytest -q

      - name: Log in to GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        if: github.event_name == 'push'
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.PROJECT_DIR }}
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


